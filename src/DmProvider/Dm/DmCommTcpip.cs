using System;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Threading;

namespace Dm
{
	internal class DmCommTcpip : DmComm
	{
		private Socket m_Sock;

		private volatile bool m_Closed;

		internal DHKey clientKeyPair;

		internal Cipher cipher;

		private static ManualResetEvent _clientDone = new ManualResetEvent(initialState: false);

		public long[][] CRC32 = new long[8][]
		{
			new long[256]
			{
				0L, 1996959894L, 3993919788L, 2567524794L, 124634137L, 1886057615L, 3915621685L, 2657392035L, 249268274L, 2044508324L,
				3772115230L, 2547177864L, 162941995L, 2125561021L, 3887607047L, 2428444049L, 498536548L, 1789927666L, 4089016648L, 2227061214L,
				450548861L, 1843258603L, 4107580753L, 2211677639L, 325883990L, 1684777152L, 4251122042L, 2321926636L, 335633487L, 1661365465L,
				4195302755L, 2366115317L, 997073096L, 1281953886L, 3579855332L, 2724688242L, 1006888145L, 1258607687L, 3524101629L, 2768942443L,
				901097722L, 1119000684L, 3686517206L, 2898065728L, 853044451L, 1172266101L, 3705015759L, 2882616665L, 651767980L, 1373503546L,
				3369554304L, 3218104598L, 565507253L, 1454621731L, 3485111705L, 3099436303L, 671266974L, 1594198024L, 3322730930L, 2970347812L,
				795835527L, 1483230225L, 3244367275L, 3060149565L, 1994146192L, 31158534L, 2563907772L, 4023717930L, 1907459465L, 112637215L,
				2680153253L, 3904427059L, 2013776290L, 251722036L, 2517215374L, 3775830040L, 2137656763L, 141376813L, 2439277719L, 3865271297L,
				1802195444L, 476864866L, 2238001368L, 4066508878L, 1812370925L, 453092731L, 2181625025L, 4111451223L, 1706088902L, 314042704L,
				2344532202L, 4240017532L, 1658658271L, 366619977L, 2362670323L, 4224994405L, 1303535960L, 984961486L, 2747007092L, 3569037538L,
				1256170817L, 1037604311L, 2765210733L, 3554079995L, 1131014506L, 879679996L, 2909243462L, 3663771856L, 1141124467L, 855842277L,
				2852801631L, 3708648649L, 1342533948L, 654459306L, 3188396048L, 3373015174L, 1466479909L, 544179635L, 3110523913L, 3462522015L,
				1591671054L, 702138776L, 2966460450L, 3352799412L, 1504918807L, 783551873L, 3082640443L, 3233442989L, 3988292384L, 2596254646L,
				62317068L, 1957810842L, 3939845945L, 2647816111L, 81470997L, 1943803523L, 3814918930L, 2489596804L, 225274430L, 2053790376L,
				3826175755L, 2466906013L, 167816743L, 2097651377L, 4027552580L, 2265490386L, 503444072L, 1762050814L, 4150417245L, 2154129355L,
				426522225L, 1852507879L, 4275313526L, 2312317920L, 282753626L, 1742555852L, 4189708143L, 2394877945L, 397917763L, 1622183637L,
				3604390888L, 2714866558L, 953729732L, 1340076626L, 3518719985L, 2797360999L, 1068828381L, 1219638859L, 3624741850L, 2936675148L,
				906185462L, 1090812512L, 3747672003L, 2825379669L, 829329135L, 1181335161L, 3412177804L, 3160834842L, 628085408L, 1382605366L,
				3423369109L, 3138078467L, 570562233L, 1426400815L, 3317316542L, 2998733608L, 733239954L, 1555261956L, 3268935591L, 3050360625L,
				752459403L, 1541320221L, 2607071920L, 3965973030L, 1969922972L, 40735498L, 2617837225L, 3943577151L, 1913087877L, 83908371L,
				2512341634L, 3803740692L, 2075208622L, 213261112L, 2463272603L, 3855990285L, 2094854071L, 198958881L, 2262029012L, 4057260610L,
				1759359992L, 534414190L, 2176718541L, 4139329115L, 1873836001L, 414664567L, 2282248934L, 4279200368L, 1711684554L, 285281116L,
				2405801727L, 4167216745L, 1634467795L, 376229701L, 2685067896L, 3608007406L, 1308918612L, 956543938L, 2808555105L, 3495958263L,
				1231636301L, 1047427035L, 2932959818L, 3654703836L, 1088359270L, 936918000L, 2847714899L, 3736837829L, 1202900863L, 817233897L,
				3183342108L, 3401237130L, 1404277552L, 615818150L, 3134207493L, 3453421203L, 1423857449L, 601450431L, 3009837614L, 3294710456L,
				1567103746L, 711928724L, 3020668471L, 3272380065L, 1510334235L, 755167117L
			},
			new long[256]
			{
				0L, 421212481L, 842424962L, 724390851L, 1684849924L, 2105013317L, 1448781702L, 1329698503L, 3369699848L, 3519200073L,
				4210026634L, 3824474571L, 2897563404L, 3048111693L, 2659397006L, 2274893007L, 1254232657L, 1406739216L, 2029285587L, 1643069842L,
				783210325L, 934667796L, 479770071L, 92505238L, 2182846553L, 2600511768L, 2955803355L, 2838940570L, 3866582365L, 4285295644L,
				3561045983L, 3445231262L, 2508465314L, 2359236067L, 2813478432L, 3198777185L, 4058571174L, 3908292839L, 3286139684L, 3670389349L,
				1566420650L, 1145479147L, 1869335592L, 1987116393L, 959540142L, 539646703L, 185010476L, 303839341L, 3745920755L, 3327985586L,
				3983561841L, 4100678960L, 3140154359L, 2721170102L, 2300350837L, 2416418868L, 396344571L, 243568058L, 631889529L, 1018359608L,
				1945336319L, 1793607870L, 1103436669L, 1490954812L, 4034481925L, 3915546180L, 3259968903L, 3679722694L, 2484439553L, 2366552896L,
				2787371139L, 3208174018L, 950060301L, 565965900L, 177645455L, 328046286L, 1556873225L, 1171730760L, 1861902987L, 2011255754L,
				3132841300L, 2745199637L, 2290958294L, 2442530455L, 3738671184L, 3352078609L, 3974232786L, 4126854035L, 1919080284L, 1803150877L,
				1079293406L, 1498383519L, 370020952L, 253043481L, 607678682L, 1025720731L, 1711106983L, 2095471334L, 1472923941L, 1322268772L,
				26324643L, 411738082L, 866634785L, 717028704L, 2904875439L, 3024081134L, 2668790573L, 2248782444L, 3376948395L, 3495106026L,
				4219356713L, 3798300520L, 792689142L, 908347575L, 487136116L, 68299317L, 1263779058L, 1380486579L, 2036719216L, 1618931505L,
				3890672638L, 4278043327L, 3587215740L, 3435896893L, 2206873338L, 2593195963L, 2981909624L, 2829542713L, 998479947L, 580430090L,
				162921161L, 279890824L, 1609522511L, 1190423566L, 1842954189L, 1958874764L, 4082766403L, 3930137346L, 3245109441L, 3631694208L,
				2536953671L, 2385372678L, 2768287173L, 3155920004L, 1900120602L, 1750776667L, 1131931800L, 1517083097L, 355290910L, 204897887L,
				656092572L, 1040194781L, 3113746450L, 2692952403L, 2343461520L, 2461357009L, 3723805974L, 3304059991L, 4022511508L, 4141455061L,
				2919742697L, 3072101800L, 2620513899L, 2234183466L, 3396041197L, 3547351212L, 4166851439L, 3779471918L, 1725839073L, 2143618976L,
				1424512099L, 1307796770L, 45282277L, 464110244L, 813994343L, 698327078L, 3838160568L, 4259225593L, 3606301754L, 3488152955L,
				2158586812L, 2578602749L, 2996767038L, 2877569151L, 740041904L, 889656817L, 506086962L, 120682355L, 1215357364L, 1366020341L,
				2051441462L, 1667084919L, 3422213966L, 3538019855L, 4190942668L, 3772220557L, 2945847882L, 3062702859L, 2644537544L, 2226864521L,
				52649286L, 439905287L, 823476164L, 672009861L, 1733269570L, 2119477507L, 1434057408L, 1281543041L, 2167981343L, 2552493150L,
				3004082077L, 2853541596L, 3847487515L, 4233048410L, 3613549209L, 3464057816L, 1239502615L, 1358593622L, 2077699477L, 1657543892L,
				764250643L, 882293586L, 532408465L, 111204816L, 1585378284L, 1197851309L, 1816695150L, 1968414767L, 974272232L, 587794345L,
				136598634L, 289367339L, 2527558116L, 2411481253L, 2760973158L, 3179948583L, 4073438432L, 3956313505L, 3237863010L, 3655790371L,
				347922877L, 229101820L, 646611775L, 1066513022L, 1892689081L, 1774917112L, 1122387515L, 1543337850L, 3697634229L, 3313392372L,
				3998419255L, 4148705398L, 3087642289L, 2702352368L, 2319436851L, 2468674930L
			},
			new long[256]
			{
				0L, 29518391L, 59036782L, 38190681L, 118073564L, 114017003L, 76381362L, 89069189L, 236147128L, 265370511L,
				228034006L, 206958561L, 152762724L, 148411219L, 178138378L, 190596925L, 472294256L, 501532999L, 530741022L, 509615401L,
				456068012L, 451764635L, 413917122L, 426358261L, 305525448L, 334993663L, 296822438L, 275991697L, 356276756L, 352202787L,
				381193850L, 393929805L, 944588512L, 965684439L, 1003065998L, 973863097L, 1061482044L, 1049003019L, 1019230802L, 1023561829L,
				912136024L, 933002607L, 903529270L, 874031361L, 827834244L, 815125939L, 852716522L, 856752605L, 611050896L, 631869351L,
				669987326L, 640506825L, 593644876L, 580921211L, 551983394L, 556069653L, 712553512L, 733666847L, 704405574L, 675154545L,
				762387700L, 749958851L, 787859610L, 792175277L, 1889177024L, 1901651959L, 1931368878L, 1927033753L, 2006131996L, 1985040171L,
				1947726194L, 1976933189L, 2122964088L, 2135668303L, 2098006038L, 2093965857L, 2038461604L, 2017599123L, 2047123658L, 2076625661L,
				1824272048L, 1836991623L, 1866005214L, 1861914857L, 1807058540L, 1786244187L, 1748062722L, 1777547317L, 1655668488L, 1668093247L,
				1630251878L, 1625932113L, 1705433044L, 1684323811L, 1713505210L, 1742760333L, 1222101792L, 1226154263L, 1263738702L, 1251046777L,
				1339974652L, 1310460363L, 1281013650L, 1301863845L, 1187289752L, 1191637167L, 1161842422L, 1149379777L, 1103966788L, 1074747507L,
				1112139306L, 1133218845L, 1425107024L, 1429406311L, 1467333694L, 1454888457L, 1408811148L, 1379576507L, 1350309090L, 1371438805L,
				1524775400L, 1528845279L, 1499917702L, 1487177649L, 1575719220L, 1546255107L, 1584350554L, 1605185389L, 3778354048L, 3774312887L,
				3803303918L, 3816007129L, 3862737756L, 3892238699L, 3854067506L, 3833203973L, 4012263992L, 4007927823L, 3970080342L, 3982554209L,
				3895452388L, 3924658387L, 3953866378L, 3932773565L, 4245928176L, 4241609415L, 4271336606L, 4283762345L, 4196012076L, 4225268251L,
				4187931714L, 4166823541L, 4076923208L, 4072833919L, 4035198246L, 4047918865L, 4094247316L, 4123732899L, 4153251322L, 4132437965L,
				3648544096L, 3636082519L, 3673983246L, 3678331705L, 3732010428L, 3753090955L, 3723829714L, 3694611429L, 3614117080L, 3601426159L,
				3572488374L, 3576541825L, 3496125444L, 3516976691L, 3555094634L, 3525581405L, 3311336976L, 3298595879L, 3336186494L, 3340255305L,
				3260503756L, 3281337595L, 3251864226L, 3222399125L, 3410866088L, 3398419871L, 3368647622L, 3372945905L, 3427010420L, 3448139075L,
				3485520666L, 3456284973L, 2444203584L, 2423127159L, 2452308526L, 2481530905L, 2527477404L, 2539934891L, 2502093554L, 2497740997L,
				2679949304L, 2659102159L, 2620920726L, 2650438049L, 2562027300L, 2574714131L, 2603727690L, 2599670141L, 2374579504L, 2353749767L,
				2383274334L, 2412743529L, 2323684844L, 2336421851L, 2298759554L, 2294686645L, 2207933576L, 2186809023L, 2149495014L, 2178734801L,
				2224278612L, 2236720739L, 2266437690L, 2262135309L, 2850214048L, 2820717207L, 2858812622L, 2879680249L, 2934667388L, 2938704459L,
				2909776914L, 2897069605L, 2817622296L, 2788420399L, 2759153014L, 2780249921L, 2700618180L, 2704950259L, 2742877610L, 2730399645L,
				3049550800L, 3020298727L, 3057690558L, 3078802825L, 2999835404L, 3004150075L, 2974355298L, 2961925461L, 3151438440L, 3121956959L,
				3092510214L, 3113327665L, 3168701108L, 3172786307L, 3210370778L, 3197646061L
			},
			new long[256]
			{
				0L, 3099354981L, 2852767883L, 313896942L, 2405603159L, 937357362L, 627793884L, 2648127673L, 3316918511L, 2097696650L,
				1874714724L, 3607201537L, 1255587768L, 4067088605L, 3772741427L, 1482887254L, 1343838111L, 3903140090L, 4195393300L, 1118632049L,
				3749429448L, 1741137837L, 1970407491L, 3452858150L, 2511175536L, 756094997L, 1067759611L, 2266550430L, 449832999L, 2725482306L,
				2965774508L, 142231497L, 2687676222L, 412010587L, 171665333L, 2995192016L, 793786473L, 2548850444L, 2237264098L, 1038456711L,
				1703315409L, 3711623348L, 3482275674L, 1999841343L, 3940814982L, 1381529571L, 1089329165L, 4166106984L, 4029413537L, 1217896388L,
				1512189994L, 3802027855L, 2135519222L, 3354724499L, 3577784189L, 1845280792L, 899665998L, 2367928107L, 2677414085L, 657096608L,
				3137160985L, 37822588L, 284462994L, 2823350519L, 2601801789L, 598228824L, 824021174L, 2309093331L, 343330666L, 2898962447L,
				3195996129L, 113467524L, 1587572946L, 3860600759L, 4104763481L, 1276501820L, 3519211397L, 1769898208L, 2076913422L, 3279374443L,
				3406630818L, 1941006535L, 1627703081L, 3652755532L, 1148164341L, 4241751952L, 3999682686L, 1457141531L, 247015245L, 3053797416L,
				2763059142L, 470583459L, 2178658330L, 963106687L, 735213713L, 2473467892L, 992409347L, 2207944806L, 2435792776L, 697522413L,
				3024379988L, 217581361L, 508405983L, 2800865210L, 4271038444L, 1177467017L, 1419450215L, 3962007554L, 1911572667L, 3377213406L,
				3690561584L, 1665525589L, 1799331996L, 3548628985L, 3241568279L, 2039091058L, 3831314379L, 1558270126L, 1314193216L, 4142438437L,
				2928380019L, 372764438L, 75645176L, 3158189981L, 568925988L, 2572515393L, 2346768303L, 861712586L, 3982079547L, 1441124702L,
				1196457648L, 4293663189L, 1648042348L, 3666298377L, 3358779879L, 1888390786L, 686661332L, 2421291441L, 2196002399L, 978858298L,
				2811169155L, 523464422L, 226935048L, 3040519789L, 3175145892L, 100435649L, 390670639L, 2952089162L, 841119475L, 2325614998L,
				2553003640L, 546822429L, 2029308235L, 3225988654L, 3539796416L, 1782671013L, 4153826844L, 1328167289L, 1570739863L, 3844338162L,
				1298864389L, 4124540512L, 3882013070L, 1608431339L, 3255406162L, 2058742071L, 1744848601L, 3501990332L, 2296328682L, 811816591L,
				584513889L, 2590678532L, 129869501L, 3204563416L, 2914283062L, 352848211L, 494030490L, 2781751807L, 3078325777L, 264757620L,
				2450577869L, 715964072L, 941166918L, 2158327331L, 3636881013L, 1618608400L, 1926213374L, 3396585883L, 1470427426L, 4011365959L,
				4255988137L, 1158766284L, 1984818694L, 3471935843L, 3695453837L, 1693991400L, 4180638033L, 1100160564L, 1395044826L, 3952793279L,
				3019491049L, 189112716L, 435162722L, 2706139399L, 1016811966L, 2217162459L, 2526189877L, 774831696L, 643086745L, 2666061564L,
				2354934034L, 887166583L, 2838900430L, 294275499L, 54519365L, 3145957664L, 3823145334L, 1532818963L, 1240029693L, 4048895640L,
				1820460577L, 3560857924L, 3331051178L, 2117577167L, 3598663992L, 1858283101L, 2088143283L, 3301633750L, 1495127663L, 3785470218L,
				4078182116L, 1269332353L, 332098007L, 2876706482L, 3116540252L, 25085497L, 2628386432L, 605395429L, 916469259L, 2384220526L,
				2254837415L, 1054503362L, 745528876L, 2496903497L, 151290352L, 2981684885L, 2735556987L, 464596510L, 1137851976L, 4218313005L,
				3923506883L, 1365741990L, 3434129695L, 1946996346L, 1723425172L, 3724871409L
			},
			new long[256]
			{
				0L, 1029712304L, 2059424608L, 1201699536L, 4118849216L, 3370159984L, 2403399072L, 2988497936L, 812665793L, 219177585L,
				1253054625L, 2010132753L, 3320900865L, 4170237105L, 3207642721L, 2186319825L, 1625331586L, 1568718386L, 438355170L, 658566482L,
				2506109250L, 2818578674L, 4020265506L, 3535817618L, 1351670851L, 1844508147L, 709922595L, 389064339L, 2769320579L, 2557498163L,
				3754961379L, 3803185235L, 3250663172L, 4238411444L, 3137436772L, 2254525908L, 876710340L, 153198708L, 1317132964L, 1944187668L,
				4054934725L, 3436268917L, 2339452837L, 3054575125L, 70369797L, 961670069L, 2129760613L, 1133623509L, 2703341702L, 2621542710L,
				3689016294L, 3867263574L, 1419845190L, 1774270454L, 778128678L, 318858390L, 2438067015L, 2888948471L, 3952189479L, 3606153623L,
				1691440519L, 1504803895L, 504432359L, 594620247L, 1492342857L, 1704161785L, 573770537L, 525542041L, 2910060169L, 2417219385L,
				3618876905L, 3939730521L, 1753420680L, 1440954936L, 306397416L, 790849880L, 2634265928L, 2690882808L, 3888375336L, 3668168600L,
				940822475L, 91481723L, 1121164459L, 2142483739L, 3448989963L, 4042473659L, 3075684971L, 2318603227L, 140739594L, 889433530L,
				1923340138L, 1338244826L, 4259521226L, 3229813626L, 2267247018L, 3124975642L, 2570221389L, 2756861693L, 3824297005L, 3734113693L,
				1823658381L, 1372780605L, 376603373L, 722643805L, 2839690380L, 2485261628L, 3548540908L, 4007806556L, 1556257356L, 1638052860L,
				637716780L, 459464860L, 4191346895L, 3300051327L, 2199040943L, 3195181599L, 206718479L, 825388991L, 1989285231L, 1274166495L,
				3382881038L, 4106388158L, 3009607790L, 2382549470L, 1008864718L, 21111934L, 1189240494L, 2072147742L, 2984685714L, 2357631266L,
				3408323570L, 4131834434L, 1147541074L, 2030452706L, 1051084082L, 63335554L, 2174155603L, 3170292451L, 4216760371L, 3325460867L,
				1947622803L, 1232499747L, 248909555L, 867575619L, 3506841360L, 3966111392L, 2881909872L, 2527485376L, 612794832L, 434546784L,
				1581699760L, 1663499008L, 3782634705L, 3692447073L, 2612412337L, 2799048193L, 351717905L, 697754529L, 1849071985L, 1398190273L,
				1881644950L, 1296545318L, 182963446L, 931652934L, 2242328918L, 3100053734L, 4284967478L, 3255255942L, 1079497815L, 2100821479L,
				983009079L, 133672583L, 3050795671L, 2293717799L, 3474399735L, 4067887175L, 281479188L, 765927844L, 1778867060L, 1466397380L,
				3846680276L, 3626469220L, 2676489652L, 2733102084L, 548881365L, 500656741L, 1517752501L, 1729575173L, 3577210133L, 3898068133L,
				2952246901L, 2459410373L, 3910527195L, 3564487019L, 2480257979L, 2931134987L, 479546907L, 569730987L, 1716854139L, 1530213579L,
				3647316762L, 3825568426L, 2745561210L, 2663766474L, 753206746L, 293940330L, 1445287610L, 1799716618L, 2314567513L, 3029685993L,
				4080348217L, 3461678473L, 2088098201L, 1091956777L, 112560889L, 1003856713L, 3112514712L, 2229607720L, 3276105720L, 4263857736L,
				1275433560L, 1902492648L, 918929720L, 195422344L, 685033439L, 364179055L, 1377080511L, 1869921551L, 3713294623L, 3761522863L,
				2811507327L, 2599689167L, 413436958L, 633644462L, 1650777982L, 1594160846L, 3978570462L, 3494118254L, 2548332990L, 2860797966L,
				1211387997L, 1968470509L, 854852413L, 261368461L, 3182753437L, 2161434413L, 3346310653L, 4195650637L, 2017729436L, 1160000044L,
				42223868L, 1071931724L, 2378480988L, 2963576044L, 4144295484L, 3395602316L
			},
			new long[256]
			{
				0L, 3411858341L, 1304994059L, 2257875630L, 2609988118L, 1355649459L, 3596215069L, 486879416L, 3964895853L, 655315400L,
				2711298918L, 1791488195L, 2009251963L, 3164476382L, 973758832L, 4048990933L, 64357019L, 3364540734L, 1310630800L, 2235723829L,
				2554806413L, 1394316072L, 3582976390L, 517157411L, 4018503926L, 618222419L, 2722963965L, 1762783832L, 1947517664L, 3209171269L,
				970744811L, 4068520014L, 128714038L, 3438335635L, 1248109629L, 2167961496L, 2621261600L, 1466012805L, 3522553387L, 447296910L,
				3959392091L, 547575038L, 2788632144L, 1835791861L, 1886307661L, 3140622056L, 1034314822L, 4143626211L, 75106221L, 3475428360L,
				1236444838L, 2196665603L, 2682996155L, 1421317662L, 3525567664L, 427767573L, 3895035328L, 594892389L, 2782995659L, 1857943406L,
				1941489622L, 3101955187L, 1047553757L, 4113347960L, 257428076L, 3288652233L, 1116777319L, 2311878850L, 2496219258L, 1603640287L,
				3640781169L, 308099796L, 3809183745L, 676813732L, 2932025610L, 1704983215L, 2023410199L, 3016104370L, 894593820L, 4262377657L,
				210634999L, 3352484690L, 1095150076L, 2316991065L, 2535410401L, 1547934020L, 3671583722L, 294336591L, 3772615322L, 729897279L,
				2903845777L, 1716123700L, 2068629644L, 2953845545L, 914647431L, 4258839074L, 150212442L, 3282623743L, 1161604689L, 2388688372L,
				2472889676L, 1480171241L, 3735940167L, 368132066L, 3836185911L, 805002898L, 2842635324L, 1647574937L, 2134298401L, 3026852996L,
				855535146L, 4188192143L, 186781121L, 3229539940L, 1189784778L, 2377547631L, 2427670487L, 1542429810L, 3715886812L, 371670393L,
				3882979244L, 741170185L, 2864262823L, 1642462466L, 2095107514L, 3082559007L, 824732849L, 4201955092L, 514856152L, 3589064573L,
				1400419795L, 2552522358L, 2233554638L, 1316849003L, 3370776517L, 62202976L, 4075001525L, 968836368L, 3207280574L, 1954014235L,
				1769133219L, 2720925446L, 616199592L, 4024870413L, 493229635L, 3594175974L, 1353627464L, 2616354029L, 2264355925L, 1303087088L,
				3409966430L, 6498043L, 4046820398L, 979978123L, 3170710821L, 2007099008L, 1789187640L, 2717386141L, 661419827L, 3962610838L,
				421269998L, 3527459403L, 1423225061L, 2676515648L, 2190300152L, 1238466653L, 3477467891L, 68755798L, 4115633027L, 1041448998L,
				3095868040L, 1943789869L, 1860096405L, 2776760880L, 588673182L, 3897205563L, 449450869L, 3516317904L, 1459794558L, 2623431131L,
				2170245475L, 1242006214L, 3432247400L, 131015629L, 4137259288L, 1036337853L, 3142660115L, 1879958454L, 1829294862L, 2790523051L,
				549483013L, 3952910752L, 300424884L, 3669282065L, 1545650111L, 2541513754L, 2323209378L, 1092980487L, 3350330793L, 216870412L,
				4256931033L, 921128828L, 2960342482L, 2066738807L, 1714085583L, 2910195050L, 736264132L, 3770592353L, 306060335L, 3647131530L,
				1610005796L, 2494197377L, 2309971513L, 1123257756L, 3295149874L, 255536279L, 4268596802L, 892423655L, 3013951305L, 2029645036L,
				1711070292L, 2929725425L, 674528607L, 3815288570L, 373562242L, 3709388839L, 1535949449L, 2429577516L, 2379569556L, 1183418929L,
				3223189663L, 188820282L, 4195850735L, 827017802L, 3084859620L, 2089020225L, 1636228089L, 2866415708L, 743340786L, 3876759895L,
				361896217L, 3738094268L, 1482340370L, 2466671543L, 2382584591L, 1163888810L, 3284924932L, 144124321L, 4190215028L, 849168593L,
				3020503679L, 2136336858L, 1649465698L, 2836138695L, 798521449L, 3838094284L
			},
			new long[256]
			{
				0L, 2792819636L, 2543784233L, 837294749L, 4098827283L, 1379413927L, 1674589498L, 3316072078L, 871321191L, 2509784531L,
				2758827854L, 34034938L, 3349178996L, 1641505216L, 1346337629L, 4131942633L, 1742642382L, 3249117050L, 4030828007L, 1446413907L,
				2475800797L, 904311657L, 68069876L, 2725880384L, 1412551337L, 4064729373L, 3283010432L, 1708771380L, 2692675258L, 101317902L,
				937551763L, 2442587175L, 3485284764L, 1774858792L, 1478633653L, 4266992385L, 1005723023L, 2642744891L, 2892827814L, 169477906L,
				4233263099L, 1512406095L, 1808623314L, 3451546982L, 136139752L, 2926205020L, 2676114113L, 972376437L, 2825102674L, 236236518L,
				1073525883L, 2576072655L, 1546420545L, 4200303349L, 3417542760L, 1841601500L, 2609703733L, 1039917185L, 202635804L, 2858742184L,
				1875103526L, 3384067218L, 4166835727L, 1579931067L, 1141601657L, 3799809741L, 3549717584L, 1977839588L, 2957267306L, 372464350L,
				668680259L, 2175552503L, 2011446046L, 3516084394L, 3766168119L, 1175200131L, 2209029901L, 635180217L, 338955812L, 2990736784L,
				601221559L, 2242044419L, 3024812190L, 306049834L, 3617246628L, 1911408144L, 1074125965L, 3866285881L, 272279504L, 3058543716L,
				2275784441L, 567459149L, 3832906691L, 1107462263L, 1944752874L, 3583875422L, 2343980261L, 767641425L, 472473036L, 3126744696L,
				2147051766L, 3649987394L, 3899029983L, 1309766251L, 3092841090L, 506333494L, 801510315L, 2310084639L, 1276520081L, 3932237093L,
				3683203000L, 2113813516L, 3966292011L, 1243601823L, 2079834370L, 3716205238L, 405271608L, 3192979340L, 2411259153L, 701492901L,
				3750207052L, 2045810168L, 1209569125L, 4000285905L, 734575199L, 2378150379L, 3159862134L, 438345922L, 2283203314L, 778166598L,
				529136603L, 3120492655L, 2086260449L, 3660498261L, 3955679176L, 1303499900L, 3153699989L, 495890209L, 744928700L, 2316418568L,
				1337360518L, 3921775410L, 3626602927L, 2120129051L, 4022892092L, 1237286280L, 2018993941L, 3726666913L, 461853231L, 3186645403L,
				2350400262L, 711936178L, 3693557851L, 2052076527L, 1270360434L, 3989775046L, 677911624L, 2384402428L, 3220639073L, 427820757L,
				1202443118L, 3789347034L, 3493118535L, 1984154099L, 3018127229L, 362020041L, 612099668L, 2181885408L, 1950653705L, 3526596285L,
				3822816288L, 1168934804L, 2148251930L, 645706414L, 395618355L, 2984485767L, 544559008L, 2248295444L, 3085590153L, 295523645L,
				3560598451L, 1917673479L, 1134918298L, 3855773998L, 328860103L, 3052210803L, 2214924526L, 577903450L, 3889505748L, 1101147744L,
				1883911421L, 3594338121L, 3424493451L, 1785369663L, 1535282850L, 4260726038L, 944946072L, 2653270060L, 2949491377L, 163225861L,
				4294103532L, 1501944408L, 1752023237L, 3457862513L, 196998655L, 2915761739L, 2619532502L, 978710370L, 2881684293L, 229902577L,
				1012666988L, 2586515928L, 1603020630L, 4193987810L, 3356702335L, 1852063179L, 2553040162L, 1046169238L, 263412747L, 2848217023L,
				1818454321L, 3390333573L, 4227627032L, 1569420204L, 60859927L, 2782375331L, 2487203646L, 843627658L, 4159668740L, 1368951216L,
				1617990445L, 3322386585L, 810543216L, 2520310724L, 2815490393L, 27783917L, 3288386659L, 1652017111L, 1402985802L, 4125677310L,
				1685994201L, 3255382381L, 4091620336L, 1435902020L, 2419138250L, 910562686L, 128847843L, 2715354199L, 1469150398L, 4058414858L,
				3222168983L, 1719234083L, 2749255853L, 94984985L, 876691844L, 2453031472L
			},
			new long[256]
			{
				0L, 3433693342L, 1109723005L, 2391738339L, 2219446010L, 1222643300L, 3329165703L, 180685081L, 3555007413L, 525277995L,
				2445286600L, 1567235158L, 1471092047L, 2600801745L, 361370162L, 3642757804L, 2092642603L, 2953916853L, 1050555990L, 4063508168L,
				4176560081L, 878395215L, 3134470316L, 1987983410L, 2942184094L, 1676945920L, 3984272867L, 567356797L, 722740324L, 3887998202L,
				1764827929L, 2778407815L, 4185285206L, 903635656L, 3142804779L, 2012833205L, 2101111980L, 2979425330L, 1058630609L, 4088621903L,
				714308067L, 3862526333L, 1756790430L, 2753330688L, 2933487385L, 1651734407L, 3975966820L, 542535930L, 2244825981L, 1231508451L,
				3353891840L, 188896414L, 25648519L, 3442302233L, 1134713594L, 2399689316L, 1445480648L, 2592229462L, 336416693L, 3634843435L,
				3529655858L, 516441772L, 2420588879L, 1559052753L, 698204909L, 3845636723L, 1807271312L, 2803025166L, 2916600855L, 1635634313L,
				4025666410L, 593021940L, 4202223960L, 919787974L, 3093159461L, 1962401467L, 2117261218L, 2996361020L, 1008193759L, 4038971457L,
				1428616134L, 2576151384L, 386135227L, 3685348389L, 3513580860L, 499580322L, 2471098945L, 1608776415L, 2260985971L, 1248454893L,
				3303468814L, 139259792L, 42591881L, 3458459159L, 1085071860L, 2349261162L, 3505103035L, 474062885L, 2463016902L, 1583654744L,
				1419882049L, 2550902495L, 377792828L, 3660491170L, 51297038L, 3483679632L, 1093385331L, 2374089965L, 2269427188L, 1273935210L,
				3311514249L, 164344343L, 2890961296L, 1627033870L, 4000683757L, 585078387L, 672833386L, 3836780532L, 1782552599L, 2794821769L,
				2142603813L, 3005188795L, 1032883544L, 4047146438L, 4227826911L, 928351297L, 3118105506L, 1970307900L, 1396409818L, 2677114180L,
				287212199L, 3719594553L, 3614542624L, 467372990L, 2505346141L, 1509854403L, 2162073199L, 1282711281L, 3271268626L, 240228748L,
				76845205L, 3359543307L, 1186043880L, 2317064054L, 796964081L, 3811226735L, 1839575948L, 2702160658L, 2882189835L, 1734392469L,
				3924802934L, 625327592L, 4234522436L, 818917338L, 3191908409L, 1927981223L, 2016387518L, 3028656416L, 973776579L, 4137723485L,
				2857232268L, 1726474002L, 3899187441L, 616751215L, 772270454L, 3803048424L, 1814228491L, 2693328533L, 2041117753L, 3036871847L,
				999160644L, 4146592730L, 4259508931L, 826864221L, 3217552830L, 1936586016L, 3606501031L, 442291769L, 2496909786L, 1484378436L,
				1388107869L, 2652297411L, 278519584L, 3694387134L, 85183762L, 3384397196L, 1194773103L, 2342308593L, 2170143720L, 1307820918L,
				3279733909L, 265733131L, 2057717559L, 3054258089L, 948125770L, 4096344276L, 4276898253L, 843467091L, 3167309488L, 1885556270L,
				2839764098L, 1709792284L, 3949353983L, 667704161L, 755585656L, 3785577190L, 1865176325L, 2743489947L, 102594076L, 3401021058L,
				1144549729L, 2291298815L, 2186770662L, 1325234296L, 3228729243L, 215514885L, 3589828009L, 424832311L, 2547870420L, 1534552650L,
				1370645331L, 2635621325L, 328688686L, 3745342640L, 2211456353L, 1333405183L, 3254067740L, 224338562L, 127544219L, 3408931589L,
				1170156774L, 2299866232L, 1345666772L, 2627681866L, 303053225L, 3736746295L, 3565105198L, 416624816L, 2522494803L, 1525692365L,
				4285207626L, 868291796L, 3176010551L, 1910772649L, 2065767088L, 3079346734L, 956571085L, 4121828691L, 747507711L, 3760459617L,
				1856702594L, 2717976604L, 2831417605L, 1684930971L, 3940615800L, 642451174L
			}
		};

		public const int CRC32_LEN = 4;

		private void connect(string server, int port, int timeout)
		{
			SocketAsyncEventArgs socketAsyncEventArgs = new SocketAsyncEventArgs();
			try
			{
				IPAddress iPAddress = IPAddress.Parse(server);
				IPEndPoint remoteEndPoint = new IPEndPoint(iPAddress, port);
				m_Sock = new Socket(iPAddress.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
				m_Sock.Blocking = true;
				socketAsyncEventArgs.RemoteEndPoint = remoteEndPoint;
				socketAsyncEventArgs.UserToken = m_Sock;
				socketAsyncEventArgs.Completed += new EventHandler<SocketAsyncEventArgs>(e_Completed);
				_clientDone.Reset();
				IAsyncResult asyncResult = m_Sock.BeginConnect(server, port, new AsyncCallback(CallBackMethod), m_Sock);
				if (asyncResult.AsyncWaitHandle.WaitOne(timeout))
				{
					m_Sock.EndConnect(asyncResult);
				}
				if (m_Sock.Connected)
				{
					m_Sock.Close();
					m_Sock = new Socket(iPAddress.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
					m_Sock.Blocking = true;
					m_Sock.Connect(server, port);
				}
			}
			catch (SocketException)
			{
				throw;
			}
		}

		private void CallBackMethod(IAsyncResult asyncresult)
		{
			_clientDone.Set();
		}

		private void e_Completed(object sender, SocketAsyncEventArgs e)
		{
			if (!((Socket)sender).Connected)
			{
				try
				{
					((Socket)sender).Connect(e.RemoteEndPoint);
					if (((Socket)sender).Connected)
					{
						e.SocketError = SocketError.Success;
					}
				}
				catch (SocketException ex)
				{
					e.SocketError = (SocketError)((ExternalException)(object)ex).ErrorCode;
				}
				finally
				{
					_clientDone.Set();
				}
			}
			else
			{
				_clientDone.Set();
			}
		}

		public DmCommTcpip(string server, int port)
			: this(server, port, 0)
		{
		}

		public DmCommTcpip(string server, int port, int timeout)
		{
			try
			{
				IPAddress iPAddress = null;
				try
				{
					connect(server, port, timeout);
				}
				catch (Exception)
				{
					IPAddress[] addressList = Dns.GetHostEntry(server).AddressList;
					for (int i = 0; i < addressList.Length; i++)
					{
						iPAddress = addressList[i];
						connect(iPAddress.ToString(), port, timeout);
						if (m_Sock.Connected)
						{
							break;
						}
					}
				}
				if (!m_Sock.Connected)
				{
					throw new SocketException(-1);
				}
				m_Closed = false;
			}
			catch (Exception)
			{
				throw;
			}
		}

		internal byte[] GetClientPubKey()
		{
			if (clientKeyPair == null)
			{
				clientKeyPair = MsgSecurity.getClientKeyPair();
			}
			return MsgSecurity.Bn2Bytes(clientKeyPair.Y, 64);
		}

		internal DHKey GetClientPrivKey()
		{
			if (clientKeyPair == null)
			{
				clientKeyPair = MsgSecurity.getClientKeyPair();
			}
			return clientKeyPair;
		}

		internal void GenMsgCiphers(int cipherType, byte[] tmpSessionKey, string cipherPath, int hashType)
		{
			if (cipherType > 0 && cipherType < 5000 && tmpSessionKey != null)
			{
				cipher = new SymmCipher2(cipherType, tmpSessionKey);
			}
			else if (cipherType >= 5000)
			{
				cipher = new ThirdPartCipher(cipherType, tmpSessionKey, cipherPath, hashType);
			}
		}

		internal override void Send(DmMsg msgIn, int SendTimeOut, bool crcBody, bool encryptMsg)
		{
			int num = msgIn.ReqGetLen() + 64;
			if (encryptMsg)
			{
				byte[] src = cipher.Encrypt(msgIn.GetBytes(64, num - 64), genDigest: true);
				msgIn.Write = 64;
				msgIn.WriteBytes(src);
				msgIn.ReqSetLen();
				num = msgIn.ReqGetLen() + 64;
			}
			if (num > 536870912)
			{
				DmError.ThrowDmException(DmErrorDefinition.ECNET_MSG_LEN_TOO_LONG);
			}
			if (crcBody)
			{
				int val = calcCRC32(msgIn, 0, num);
				msgIn.WriteInt(val);
				msgIn.ReqSetLen();
			}
			else
			{
				msgIn.ReqSetCrc(msgIn.CalculateCRC());
			}
			byte[] buffer = msgIn.Buffer;
			m_Sock.Blocking = true;
			m_Sock.SendTimeout = SendTimeOut;
			m_Sock.Send(buffer, num, SocketFlags.None);
		}

		internal override DmMsg Recv(DmMsg RecvMsg, int RecvTimeOut, bool crcBody, bool encryptMsg)
		{
			m_Sock.Blocking = true;
			m_Sock.ReceiveTimeout = RecvTimeOut;
			RecvMsg.Clear(0);
			RecvMsg.SkipRead(64);
			int num = ReadOnce(RecvMsg.Buffer, 0, 32640);
			if (num == 0)
			{
				DmError.ThrowDmException(DmErrorDefinition.ECNET_COMMUNITION_ERROR);
			}
			RecvMsg.SkipWrite(num);
			int num2 = RecvMsg.ResGetLen();
			num2 += 64;
			if (num < num2 && num != -1)
			{
				RecvMsg.SkipWrite(num2 - num);
				ReadFully(RecvMsg.Buffer, num, num2 - num);
			}
			if (crcBody)
			{
				int num3 = num2 - 4;
				int @int = RecvMsg.GetInt(num3);
				int num4 = calcCRC32(RecvMsg, 0, num3);
				if (@int != num4)
				{
					DmError.ThrowDmException(DmErrorDefinition.ECNET_CRC_CHECK_FAIL_);
				}
				RecvMsg.ResSetLen(num3 - 64);
			}
			else
			{
				byte num5 = RecvMsg.CalculateCRC();
				byte @byte = RecvMsg.GetByte(19);
				if (num5 != @byte)
				{
					DmError.ThrowDmException(DmErrorDefinition.ECNET_CRC_CHECK_FAIL_);
				}
			}
			if (encryptMsg)
			{
				byte[] bytes = RecvMsg.GetBytes(64, num2 - 64);
				byte[] array = cipher.Decrypt(bytes, checkDigest: true);
				RecvMsg.Write = 64;
				RecvMsg.WriteBytes(array);
				RecvMsg.ResSetLen(array.Length);
			}
			return RecvMsg;
		}

		private int ReadOnce(byte[] b, int off, int len)
		{
			_ = 0;
			return m_Sock.Receive(b, off, len, SocketFlags.None);
		}

		private int ReadFully(byte[] b, int offset, int len)
		{
			int i;
			int num;
			for (i = 0; i < len; i += num)
			{
				num = m_Sock.Receive(b, offset + i, len - i, SocketFlags.None);
				if (num <= 0)
				{
					DmError.ThrowDmException(DmErrorDefinition.ECNET_COMMUNITION_ERROR);
				}
			}
			return i;
		}

		public void Close()
		{
			if (m_Sock != null)
			{
				m_Sock.Close();
			}
			m_Sock = null;
			m_Closed = true;
		}

		public bool is_CLosed()
		{
			return m_Closed;
		}

		public bool isSocketClosed()
		{
			byte[] buffer = new byte[10];
			try
			{
				if (m_Sock.Poll(100, SelectMode.SelectRead) && m_Sock.Receive(buffer) == 0)
				{
					return true;
				}
			}
			catch (Exception)
			{
				return true;
			}
			return false;
		}

		~DmCommTcpip()
		{
			Close();
		}

		public int calcCRC32(DmMsg msg, int startOff, int endOff)
		{
			int num = -1;
			int num2 = startOff;
			int num3;
			for (num3 = endOff - startOff; num3 >= 8; num3 -= 8)
			{
				int num4 = msg.GetInt(num2) ^ num;
				num2 += 4;
				int @int = msg.GetInt(num2);
				num2 += 4;
				num = (int)(CRC32[7][num4 & 0xFF] ^ CRC32[6][(num4 >> 8) & 0xFF] ^ CRC32[5][(num4 >> 16) & 0xFF] ^ CRC32[4][(num4 >> 24) & 0xFF] ^ CRC32[3][@int & 0xFF] ^ CRC32[2][(@int >> 8) & 0xFF] ^ CRC32[1][(@int >> 16) & 0xFF] ^ CRC32[0][(@int >> 24) & 0xFF]);
			}
			while (num3 > 0)
			{
				num = (int)(((num >> 8) & 0xFFFFFF) ^ CRC32[0][(num & 0xFF) ^ msg.GetByte(num2)]);
				num2++;
				num3--;
			}
			return ~num;
		}
	}
}
